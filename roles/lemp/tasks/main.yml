---
- name: Update apt repo and cache on all Debian/Ubuntu boxes
  apt:
    update_cache: yes
    cache_valid_time: 3600

- name: Upgrade all packages on servers
  apt:
    upgrade: dist

- name: Install required packages
  apt:
    name:
      - mysql-server
      - nginx
      - php7.4
      - php7.4-mbstring
      - php7.4-fpm
      - php7.4-cli
      - php7.4-mysql
      - php7.4-curl
      - php7.4-json
      - php7.4-xml
      - python2
      - make
      - g++
      - redis-server
      - acl
      - net-tools
      - unzip
    state: latest

- name: Copy nginx config file
  copy:
    src: nginx.conf
    dest: /etc/nginx/

- name: Copy nginx default file
  copy:
    src: default
    dest: /etc/nginx/sites-available

- name: Copy PHP configuration files
  copy:
    src: "{{ item }}"
    dest: /etc/php/7.4/fpm/
  with_items:
    - php.ini
    - www.conf

- name: Copy MySQL configuration file
  copy:
    src: mysqld.cnf
    dest: /etc/mysql/mysql.conf.d/

- name: Create SSL directory
  file:
    path: /etc/nginx/ssl
    state: directory

- name: Install OpenSSL package
  apt:
    name: openssl
    state: latest

- name: Generate self-signed SSL certificate
  openssl_privatekey:
    path: /etc/nginx/ssl/server.key
    size: 2048
    type: RSA

- name: Generate Certificate Signing Request (CSR)
  openssl_csr:
    path: /etc/nginx/ssl/server.csr
    privatekey_path: /etc/nginx/ssl/server.key
    common_name: harw.xyz

- name: Generate self-signed certificate from CSR
  openssl_certificate:
    path: /etc/nginx/ssl/server.crt
    privatekey_path: /etc/nginx/ssl/server.key
    csr_path: /etc/nginx/ssl/server.csr
    provider: selfsigned

- name: Restart nginx Service
  service:
    name: nginx
    state: restarted

- name: Restart redis-server Service
  service:
    name: redis-server
    state: restarted

- name: Install curl
  apt:
    name: curl
    state: present

- name: Install NVM (Node Version Manager) for ubuntu user
  become: yes
  become_user: ubuntu
  shell: |
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
    export NVM_DIR="/home/ubuntu/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

- name: Install Node.js 18.14.0 for ubuntu user
  become: yes
  become_user: ubuntu
  shell: |
    export NVM_DIR="/home/ubuntu/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
    nvm install v18.14.0

- name: Install PM2 for ubuntu user
  become: yes
  become_user: ubuntu
  shell: |
    export NVM_DIR="/home/ubuntu/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
    npm install pm2 -g
    pm2 install pm2-logrotate
    pm2 set pm2-logrotate:retain 3
    pm2 set pm2-logrotate:compress true
    pm2 set pm2-logrotate:max_size 1M

- name: Create dbaccess directory
  file:
    path: "/var/www/html/dbaccess"
    state: directory
    owner: www-data
    group: www-data
    mode: '0755'

- name: Download phpMyAdmin
  get_url:
    url: "https://files.phpmyadmin.net/phpMyAdmin/5.1.1/phpMyAdmin-5.1.1-all-languages.zip"
    dest: "/tmp/phpMyAdmin.zip"

- name: Unzip phpMyAdmin
  unarchive:
    src: "/tmp/phpMyAdmin.zip"
    dest: "/var/www/html/dbaccess/"
    remote_src: yes
    owner: www-data
    group: www-data

- name: Copy phpMyAdmin files to dbaccess directory
  shell: "cp -R /var/www/html/dbaccess/phpMyAdmin-5.1.1-all-languages/* /var/www/html/dbaccess/"
  args:
    creates: "/var/www/html/dbaccess/config.sample.inc.php"
  become: yes

- name: Rename config.sample.inc.php to config.inc.php
  command: mv /var/www/html/dbaccess/config.sample.inc.php /var/www/html/dbaccess/config.inc.php
  become: yes
  ignore_errors: yes

- name: Update MySQL configuration in config.inc.php
  lineinfile:
    path: /var/www/html/dbaccess/config.inc.php
    line: "$cfg['Servers'][$i]['host'] = 'localhost';"
    insertafter: '^/* Server parameters */$'
  become: yes

- name: Update config.inc.php with MySQL configuration
  lineinfile:
    path: /var/www/html/dbaccess/config.inc.php
    line: "$cfg['Servers'][$i]['port'] = '3306';"
    insertafter: "$cfg['Servers'][$i]['host'] = 'localhost';"
  become: yes

- name: Update config.inc.php with MySQL configuration
  lineinfile:
    path: /var/www/html/dbaccess/config.inc.php
    line: "$cfg['Servers'][$i]['user'] = 'root';"
    insertafter: "$cfg['Servers'][$i]['port'] = '3306';"
  become: yes

- name: Update config.inc.php with MySQL configuration
  lineinfile:
    path: /var/www/html/dbaccess/config.inc.php
    line: "$cfg['Servers'][$i]['compress'] = false;"
    insertafter: "$cfg['Servers'][$i]['user'] = 'root';"
  become: yes

- name: Update config.inc.php with MySQL configuration
  lineinfile:
    path: /var/www/html/dbaccess/config.inc.php
    line: "$cfg['Servers'][$i]['password'] = '82BKJDSNG306DBoiUAWGUIFBo';"
    insertafter: "$cfg['Servers'][$i]['compress'] = false;"
  become: yes

- name: Update config.inc.php with MySQL configuration
  lineinfile:
    path: /var/www/html/dbaccess/config.inc.php
    line: "$cfg['Servers'][$i]['connect_type'] = 'tcp';"
    insertafter: "$cfg['Servers'][$i]['password'] = '82BKJDSNG306DBoiUAWGUIFBo';"
  become: yes

- name: Update config.inc.php with MySQL configuration
  lineinfile:
    path: /var/www/html/dbaccess/config.inc.php
    line: "$cfg['Servers'][$i]['extension'] = 'mysqli';"
    insertafter: "$cfg['Servers'][$i]['connect_type'] = 'tcp';"
  become: yes